USE SampleDWH;
GO

/*
SET NOEXEC OFF;
--*/ SET NOEXEC ON;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'setup')
BEGIN
    EXEC ('CREATE SCHEMA setup AUTHORIZATION dbo;'); -- setup: configuration tables
END;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'audit')
BEGIN
    EXEC ('CREATE SCHEMA audit AUTHORIZATION dbo;'); -- audit: log tables
END;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'Import')
BEGIN
    EXEC ('CREATE SCHEMA Import AUTHORIZATION dbo;'); -- Import: manual data tables
END;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'Landing')
BEGIN
    EXEC ('CREATE SCHEMA Landing AUTHORIZATION dbo;'); -- Landing: landing tables
END;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'Staging')
BEGIN
    EXEC ('CREATE SCHEMA Staging AUTHORIZATION dbo;'); -- Staging: staging tables
END;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'Dim')
BEGIN
    EXEC ('CREATE SCHEMA Dim AUTHORIZATION dbo;'); -- Dim: dimension tables
END;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'Fact')
BEGIN
    EXEC ('CREATE SCHEMA Fact AUTHORIZATION dbo;'); -- Fact: fact tables
END;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = N'Bridge')
BEGIN
    EXEC ('CREATE SCHEMA Bridge AUTHORIZATION dbo;'); -- Bridge: bridge tables, for many-to-many relationships
END;
GO
